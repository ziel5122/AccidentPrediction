plot(weapons$total, type="l", ylim=c(0, 13200), xlim=c(2010,2016), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
plot(weapons$total, type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
plot(weapons$total~row.names(weapons), type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
plot(weapons$total~row.names(weapons), type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
plot(weapons$total~row.names(weapons[1]), type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
weapons$year = row.names(weapons)
weapons$year
row.names(weapons) = c("2010","2011","2012","2013","2014")
colors = rainbow(4)
plot(weapons$total, type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
lines(weapons$total.firearm, col=colors[2])
lines(weapons$handgun, col=colors[3])
lines(weapons$rifle, col=colors[4])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), xlab=c("2010","2011","2012","2013","2014"), col=colors[1])
lines(weapons$total.firearm, col=colors[2])
lines(weapons$total.firearm, col=colors[2])
lines(weapons$handgun, col=colors[3])
lines(weapons$rifle, col=colors[4])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1])
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), xlim=(2010, 2016), col=colors[1],
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), xlim=c(2010, 2016), col=colors[1],
main="Homocide Counts by Weapon")
legend(legend=)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
legend("bottomright")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"))
?legend
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, width=200)
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, bty=o)
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, bty="o")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, bty="n")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, bty="n")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), horiz=TRUE, bty="o")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend("bottomright", legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
legend(x=2016, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2016, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2013, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2, y=100 legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2, y=100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2012, y=100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2015, y=100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=1000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
par(xpd=TRUE)
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
par(mar=c(2,2,3,3))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
par(xpd=TRUE)
par(mar=c(5,2,2,2))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
par(xpd=TRUE)
par(mar=c(5,3,3,5))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors)
par(xpd=TRUE)
par(mar=c(5,3,3,5))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=8000, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
par(xpd=TRUE)
par(mar=c(5,3,3,5))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon")
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
par(xpd=TRUE)
par(mar=c(5,3,3,5))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", ylab="")
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2])
lines(weapons$handgun ~ row.names(weapons), col=colors[3])
lines(weapons$rifle ~ row.names(weapons), col=colors[4])
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=3)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=3)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=3)
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=3)
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=3)
par(xpd=TRUE)
par(mar=c(5,3,3,5))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5)
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5)
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5)
par(xpd=TRUE)
par(mar=c(5,3,3,6))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5)
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5)
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5)
par(xpd=TRUE)
par(mar=c(5,3,3,7))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5)
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5)
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5)
par(xpd=TRUE)
par(mar=c(5,3,3,8))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="l", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5)
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5)
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5)
grid()
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
par(xpd=TRUE)
par(mar=c(5,3,3,6))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid()
grid(nx=5)
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid(nx=5)
par(xpd=TRUE)
par(mar=c(5,3,3,6))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid()
par(mar=c(5,3,3,6))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15, lwd=5)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid()
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014.5, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014.1, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid()
par(xpd=TRUE)
par(mar=c(5,3,3,7))
colors = rainbow(4)
plot(weapons$total ~ row.names(weapons), type="b", ylim=c(0, 13200), col=colors[1],
main="Homocide Counts by Weapon", xlab="year", lwd=5)
legend(x=2014.1, y=9100, legend=c("Total","Firearm","Handgun","Rifle"), bty="o", col=colors, pch=15)
lines(weapons$total.firearm ~ row.names(weapons), col=colors[2], lwd=5, type="b")
lines(weapons$handgun ~ row.names(weapons), col=colors[3], lwd=5, type="b")
lines(weapons$rifle ~ row.names(weapons), col=colors[4], lwd=5, type="b")
grid()
genders = data.frame(male=c(3733,5209), female=c(1664,881))
barplot(genders, beside=TRUE)
barplot(as.matrix(genders), beside=TRUE)
genders = data.frame(white=c(3733,1664), black=c(5209,881))
barplot(as.matrix(genders), beside=TRUE)
genders$white.perc = genders$white / sum(genders$white)
genders$black.perc = genders$black / sum(genders$black)
barplot(as.matrix(genders), beside=TRUE)
barplot(as.matrix(genders[,3:4]), beside=TRUE)
View(accident)
barplot(accident.FARS$FATALS, accident.FARS$day_of_year)
barplot(accident.FARS$FATALS, accident.FARS$day_of_year)
<!-- if (dirname(rstudioapi::getActiveDocumentContext()$path) != "") -->
<!--   setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) -->
setwd("/Users/austinzielinski/AccidentPrediction")
---
title: "AccidentPrediction"
author: "Austin Zielinski"
date: "October 1, 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Additional libraries required
```{r imports}
library(e1071)
library(randomForest)
library(rpart)
library(rpart.plot)
library(sas7bdat)
source("libraries/cross-validate.R")
source("libraries/data-utils.R")
```
```{r}
accident.GES = read.sas7bdat("..\\GES2014sas\\accident.sas7bdat")
person.GES   = read.sas7bdat("..\\GES2014sas\\person.sas7bdat")
vehicle.GES  = read.sas7bdat("..\\GES2014sas\\vehicle.sas7bdat")
vision.GES   = read.sas7bdat("..\\GES2014sas\\vision.sas7bdat")
accident.FARS = read.sas7bdat("..\\FARS2014sas\\accident.sas7bdat")
person.FARS   = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vehicle.FARS  = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vision.FARS   = read.sas7bdat("..\\FARS2014sas\\vision.sas7bdat")
```
```{r}
barplot(table(accident.GES$MONTH))
barplot(table(accident.GES$DAY_WEEK))
barplot(table(accident.GES$HOUR))
barplot(table(accident.GES$MINUTE))
barplot(table(accident.GES$NO_INJ_IM))
sum(accident.GES$NO_INJ_IM == 0)
sum(accident.GES$NO_INJ_IM > 0)
accident.GES$injury = accident.GES$NO_INJ_IM > 0
table(accident.GES$injury)
unique(accident.GES$MONTH)
unique(accident.GES$DAY_WEEK)
unique(accident.GES$HOUR)
unique(accident.GES$HOUR_IM)
#
time.GES = accident.GES[,c("MONTH", "DAY_WEEK", "HOUR_IM", "NO_INJ_IM")]
time.GES$ACC_SEV = time.GES$NO_INJ_IM
time.GES$ACC_SEV[time.GES$NO_INJ_IM >= 2] = 2
unique(time.GES$ACC_SEV)
time.GES = subset(time.GES, select=-c(NO_INJ_IM))
#
time.GES.splits = splitData(time.GES, 0.75)
time.GES.tr = time.GES.splits[[1]]
time.GES.te = time.GES.splits[[2]]
write.csv(time.GES, "time-GES.csv", row.names=FALSE)
num_months = length(unique(time.GES$MONTH))
num_days = length(unique(time.GES$DAY_WEEK))
num_hours = length(unique(time.GES$HOUR_IM))
month.rad = time.GES$MONTH * 2 * pi / num_months
day.rad = time.GES$DAY_WEEK * 2 * pi / num_days
hour.rad = time.GES$HOUR_IM * 2 * pi / num_hours
time2.GES = data.frame(sin(month.rad), cos(month.rad),
sin(day.rad), cos(day.rad),
sin(hour.rad), cos(hour.rad), time.GES$ACC_SEV)
write.csv(time2.GES, "time2-GES.csv", row.names=FALSE)
```
```{r}
accident.FARS[,"hour_of_year"] = accident.FARS$HOUR + 100*accident.FARS$DAY + 10000*accident.FARS$MONTH
barplot(accident.FARS$FATALS, accident.FARS$hour_of_year)
barplot(table(accident.FARS$hour_of_year))
accident.FARS[,"day_of_year"] = accident.FARS$DAY + 100*accident.FARS$MONTH
barplot(accident.FARS$FATALS, accident.FARS$day_of_year)
barplot(table(accident.FARS$day_Of_year))
sort(unique(accident.FARS$day_Of_year))
day_of_year = accident.GES$DAY_WEEK + 100*accident.GES$MONTH
times_of_year = sort(unique(day_of_year))
accident.GES
barplot(table(accident.GES$NO_INJ_IM))
sort(names(accident.GES))
unique(accident.GES$MINUTE_IM)
unique(accident.GES$MONTH)
```
```{r}
fit = lm(NO_INJ_IM ~ HOUR_IM + MINUTE_IM + DAY_WEEK + MONTH, data=accident.GES)
summary(fit)
fit = lm(NO_INJ_IM ~ HOUR_IM + MINUTE_IM + MONTH, data=accident.GES)
summary(fit)
data.sets = splitData(accident.GES[,c("HOUR_IM", "MINUTE_IM", "DAY_WEEK", "MONTH")], c(.6, .2))
nrow(data.sets[[1]])
```
```{r}
crossValidate.linreg(accident.GES, c("HOUR_IM", "MINUTE_IM", "DAY_WEEK", "MONTH"), "NO_INJ_IM", 5)
```
```{r}
all.FARS = merge(person.FARS, accident.FARS)
all.FARS = merge(all.FARS, vehicle.FARS)
all.FARS = merge(all.FARS, vision.FARS)
all.FARS$fatal = factor(as.numeric(all.FARS$INJ_SEV == 4))
all.FARS = subset(all.FARS, select=-c(WORK_INJ,INJ_SEV,DOA,DEATH_DA,DEATH_MO,DEATH_YR,DEATH_MN,DEATH_TM,DEATH_HR,HISPANIC,RACE,LAG_HRS,LAG_MINS,TWAY_ID,TWAY_ID2,CERT_NO,RAIL,HOSPITAL))
all.FARS.splits = splitData(all.FARS, .75)
all.FARS.tr = all.FARS.splits[[1]]
all.FARS.te = all.FARS.splits[[2]]
fit = rpart(fatal ~ ., data=all.FARS.tr, method="class")
predicts = predict(fit, newdata=all.FARS.te, type="class")
actuals = all.FARS.te$fatal
sum(actuals == predicts) / length(actuals)
prp(fit, extra=106, varlen=-15, box.col=c("palegreen","pink")[fit$frame$yval])
fit2 = randomForest(fatal ~ ., data=all.FARS.tr, ntree=1000)
predicts2 = predict(fit2, newdata=all.FARS.te, type="class")
sum(actuals == predicts2) / length(actuals)
time.GES$injury = factor(time.GES$injury)
time.GES.splits = splitData(time.GES, .75)
time.GES.tr = time.GES.splits[[1]]
time.GES.te = time.GES.splits[[2]]
fit5 = randomForest(injury ~ ., data=time.GES.tr, ntree=100, method="class")
predicts5 = predict(fit5, newdata=time.GES.te, type="class")
actuals5 = time.GES.te$injury
sum(actuals5 == predicts5) / length(actuals5)
```
```{r}
total1 = 0
total2 = 0
num_trials = 100
for (i in 1:num_trials) {
time.GES.splits = splitData(time.GES, .75)
time.GES.tr = time.GES.splits[[1]]
time.GES.te = time.GES.splits[[2]]
fit = glm(ACC_SEV ~ ., data=time.GES.tr)
predicts = as.numeric(predict(fit, newdata=time.GES.te) > 0.5)
# fit = rpart(ACC_SEV ~ ., data=time.GES.tr, method="class")
# predicts = predict(fit, newdata=time.GES.te, type="class")
time2.GES.splits = splitData(time2.GES, .75)
time2.GES.tr = time2.GES.splits[[1]]
time2.GES.te = time2.GES.splits[[2]]
fit2 = glm(ACC_SEV ~ ., data=time2.GES.tr)
predicts2 = as.numeric(predict(fit2, newdata=time2.GES.te) > 0.5)
# fit2 = rpart(ACC_SEV ~ ., data=time2.GES.tr, method="class")
# predicts2 = predict(fit2, newdata=time2.GES.te, type="class")
actuals = time.GES.te$ACC_SEV
total1 = total1 + sum(predicts == actuals) / length(actuals)
actuals2 = time2.GES.te$ACC_SEV
total2 = total2 + sum(predicts2 == actuals2) / length(actuals2)
}
total1 / num_trials
total2 / num_trials
```
<!-- if (dirname(rstudioapi::getActiveDocumentContext()$path) != "") -->
<!--   setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) -->
setwd("/Users/austinzielinski/AccidentPrediction")
---
title: "AccidentPrediction"
author: "Austin Zielinski"
date: "October 1, 2016"
output: html_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
Additional libraries required
```{r imports}
library(e1071)
library(randomForest)
library(rpart)
library(rpart.plot)
library(sas7bdat)
source("libraries/cross-validate.R")
source("libraries/data-utils.R")
```
```{r}
accident.GES = read.sas7bdat("..\\GES2014sas\\accident.sas7bdat")
person.GES   = read.sas7bdat("..\\GES2014sas\\person.sas7bdat")
vehicle.GES  = read.sas7bdat("..\\GES2014sas\\vehicle.sas7bdat")
vision.GES   = read.sas7bdat("..\\GES2014sas\\vision.sas7bdat")
accident.FARS = read.sas7bdat("..\\FARS2014sas\\accident.sas7bdat")
person.FARS   = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vehicle.FARS  = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vision.FARS   = read.sas7bdat("..\\FARS2014sas\\vision.sas7bdat")
```
```{r}
barplot(table(accident.GES$MONTH))
barplot(table(accident.GES$DAY_WEEK))
barplot(table(accident.GES$HOUR))
barplot(table(accident.GES$MINUTE))
barplot(table(accident.GES$NO_INJ_IM))
sum(accident.GES$NO_INJ_IM == 0)
sum(accident.GES$NO_INJ_IM > 0)
accident.GES$injury = accident.GES$NO_INJ_IM > 0
table(accident.GES$injury)
unique(accident.GES$MONTH)
unique(accident.GES$DAY_WEEK)
unique(accident.GES$HOUR)
unique(accident.GES$HOUR_IM)
#
time.GES = accident.GES[,c("MONTH", "DAY_WEEK", "HOUR_IM", "NO_INJ_IM")]
time.GES$ACC_SEV = time.GES$NO_INJ_IM
time.GES$ACC_SEV[time.GES$NO_INJ_IM >= 2] = 2
unique(time.GES$ACC_SEV)
time.GES = subset(time.GES, select=-c(NO_INJ_IM))
#
time.GES.splits = splitData(time.GES, 0.75)
time.GES.tr = time.GES.splits[[1]]
time.GES.te = time.GES.splits[[2]]
write.csv(time.GES, "time-GES.csv", row.names=FALSE)
num_months = length(unique(time.GES$MONTH))
num_days = length(unique(time.GES$DAY_WEEK))
num_hours = length(unique(time.GES$HOUR_IM))
month.rad = time.GES$MONTH * 2 * pi / num_months
day.rad = time.GES$DAY_WEEK * 2 * pi / num_days
hour.rad = time.GES$HOUR_IM * 2 * pi / num_hours
time2.GES = data.frame(sin(month.rad), cos(month.rad),
sin(day.rad), cos(day.rad),
sin(hour.rad), cos(hour.rad), time.GES$ACC_SEV)
write.csv(time2.GES, "time2-GES.csv", row.names=FALSE)
```
accident.GES = read.sas7bdat("..\\GES2014sas\\accident.sas7bdat")
person.GES   = read.sas7bdat("..\\GES2014sas\\person.sas7bdat")
vehicle.GES  = read.sas7bdat("..\\GES2014sas\\vehicle.sas7bdat")
vision.GES   = read.sas7bdat("..\\GES2014sas\\vision.sas7bdat")
accident.FARS = read.sas7bdat("..\\FARS2014sas\\accident.sas7bdat")
person.FARS   = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vehicle.FARS  = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vision.FARS   = read.sas7bdat("..\\FARS2014sas\\vision.sas7bdat")
library(e1071)
library(randomForest)
library(rpart)
library(rpart.plot)
library(sas7bdat)
source("libraries/cross-validate.R")
source("libraries/data-utils.R")
accident.GES = read.sas7bdat("..\\GES2014sas\\accident.sas7bdat")
person.GES   = read.sas7bdat("..\\GES2014sas\\person.sas7bdat")
vehicle.GES  = read.sas7bdat("..\\GES2014sas\\vehicle.sas7bdat")
vision.GES   = read.sas7bdat("..\\GES2014sas\\vision.sas7bdat")
accident.FARS = read.sas7bdat("..\\FARS2014sas\\accident.sas7bdat")
person.FARS   = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vehicle.FARS  = read.sas7bdat("..\\FARS2014sas\\person.sas7bdat")
vision.FARS   = read.sas7bdat("..\\FARS2014sas\\vision.sas7bdat")
barplot(table(accident.GES$MONTH))
barplot(table(accident.GES$DAY_WEEK))
barplot(table(accident.GES$HOUR))
barplot(table(accident.GES$MINUTE))
barplot(table(accident.GES$NO_INJ_IM))
sum(accident.GES$NO_INJ_IM == 0)
sum(accident.GES$NO_INJ_IM > 0)
accident.GES$injury = accident.GES$NO_INJ_IM > 0
table(accident.GES$injury)
unique(accident.GES$MONTH)
unique(accident.GES$DAY_WEEK)
